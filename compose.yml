version: '3.7'

services:
  redis:
    image: redis:7.4.1
    restart: "no"
    ports:
      - "6379:6379"
  zookeeper:
    image: zookeeper:3.9.3
    restart: "no"
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.8.0
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    labels:
      amplicode.image: confluent/kafka
  kafkaui:
    image: provectuslabs/kafka-ui:v0.4.0
    restart: "no"
    ports:
      - "8989:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: zookeeper_cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
  elasticsearch:
    image: elasticsearch:8.15.2
    restart: "no"
    ports:
      - "9200:9200"
    environment:
      xpack.security.enabled: "false"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  rabbitmq:
    image: rabbitmq:4.0.5
    restart: "no"
    ports:
      - "3001:3001"
    environment:
      RABBITMQ_DEFAULT_USER: daniil
      RABBITMQ_DEFAULT_PASS: daniil
  postgres:
    image: postgres:17.2
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: danilanovikov
      POSTGRES_PASSWORD: demo2228
      POSTGRES_DB: mp
  rabbitmq-2:
    image: rabbitmq:4.0.5
    restart: always
    ports:
      - "5672:5672"
volumes:
  kafka_data:
  postgres_data:
