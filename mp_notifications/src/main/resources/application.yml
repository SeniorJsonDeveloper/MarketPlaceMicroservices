server:
  port: 8085
spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: notification-service

  main:
    allow-circular-references: true
  mail:
    port: 587
    host: smtp.gmail.com
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  kafka:
    listener:
      ack-mode: manual
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: 1
      auto-offset-reset: earliest
    topic:
      otn: OrderToNotifications
      otw: OrderToWarehouse



cache:
  redis:
    host: localhost
    port: 6379


resilience4j.ratelimiter:
  instances:
    backendA:
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      registerHealthIndicator: true
      eventConsumerBufferSize: 100
    backendB:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s
















integration:
  twilio:
    sid: raetgsdfsgsdfgsdfg
    number: 7978rt97859600t6
    token: wlra;eksflv;dfgpsdlfngkdhfjtngkhjglghkjfd
  url:
    orderUrl: http://localhost:8084
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8080/eureka

