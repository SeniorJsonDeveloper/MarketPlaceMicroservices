server:
  port: 8084
spring:
  config:
    import: optional:file:.env[.properties]


  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: danilanovikov
    password: demo2228
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: true




  kafka:
    consumer:
      group-id: 1
    bootstrap-servers: localhost:9092
    topic:
      name: OrderToNotifications
      second_name: OrderToWarehouse
      third_name: OrderToDelivery

  main:
    allow-bean-definition-overriding: true

app:
  redis:
    host: localhost
    port: 6379
  cache:
    cacheType: redis
    caches:
      orderAfterCreate:
        expiry: 5m
      orderById:
        expiry: 10m
      orders:
        expiry: 10m
      comment:
        expiry: 14d
      ordersWithPagination:
        expiry: 20m





web:
  integration:
    paymentsUrl: http://localhost:8083/api/v1/payment
    warehouseUrl: http://localhost:8081/api/v1/warehouse
    pricesUrl: http://localhost:8082/api/prices
resilience4j.ratelimiter:
  instances:
    backendA:
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      registerHealthIndicator: true
      eventConsumerBufferSize: 100
    backendB:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s


